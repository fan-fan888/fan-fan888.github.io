<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>fanfan</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-12-16T03:22:26.677Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fanfan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义的纵向滚动条自动定位</title>
    <link href="http://example.com/2021/12/16/selfDefinedLongitudinalScrollAutoPositioning/"/>
    <id>http://example.com/2021/12/16/selfDefinedLongitudinalScrollAutoPositioning/</id>
    <published>2021-12-16T03:14:30.391Z</published>
    <updated>2021-12-16T03:22:26.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义的纵向滚动条自动定位"><a href="#自定义的纵向滚动条自动定位" class="headerlink" title="自定义的纵向滚动条自动定位"></a>自定义的纵向滚动条自动定位</h2><p>本文的滚动条是自己写的，并非浏览器滚动条</p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p><strong>1. 滚动容器必须要有个相对定位的父元素</strong><br><strong>2.滚动容器和需要定位的锚点元素必须要加id属性</strong></p><p>以下代码可直接复制使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Collapse, Select &#125; from &#x27;antd&#x27;;</span><br><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;;</span><br><span class="line"></span><br><span class="line">const &#123; Option &#125; = Select;</span><br><span class="line">const &#123; Panel &#125; = Collapse;</span><br><span class="line">class index extends Component &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    activeKey: &#x27;&#x27;,</span><br><span class="line">    contentList: [</span><br><span class="line">      &#x27;你好&#x27;,</span><br><span class="line">      &#x27;非常荣幸认识你&#x27;,</span><br><span class="line">      &#x27;这是我写的例子&#x27;,</span><br><span class="line">      &#x27;欢迎观看&#x27;,</span><br><span class="line">      &#x27;有任何问题&#x27;,</span><br><span class="line">      &#x27;可以给我留言哦&#x27;,</span><br><span class="line">      &#x27;哈哈&#x27;,</span><br><span class="line">      &#x27;嘻嘻&#x27;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">  componentDidMount() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  handleChange = (value) =&gt; &#123;</span><br><span class="line">    const &#123; contentList &#125; = this.state;</span><br><span class="line">    const index = contentList.indexOf(value)</span><br><span class="line">    // 列表滚动到相应的位置</span><br><span class="line">    let scrollElement = document.getElementById(&#x27;father&#x27;);    // 对应id的滚动容器</span><br><span class="line">    let anchorElement = document.getElementById(index);  // 须要定位看到的锚点元素</span><br><span class="line">    if (scrollElement &amp;&amp; anchorElement) &#123;</span><br><span class="line">      scrollElement.scrollTo(&#123; top: anchorElement.offsetTop, behavior: &quot;smooth&quot; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    // 给Collapse赋值activeKey</span><br><span class="line">    this.setState(&#123; activeKey: String(index) &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; contentList &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div style=&#123;&#123; padding: 5 &#125;&#125;&gt;</span><br><span class="line">        &lt;Select style=&#123;&#123; width: 300, marginBottom: 10 &#125;&#125;</span><br><span class="line">          placeholder=&quot;请选择&quot;</span><br><span class="line">          onChange=&#123;this.handleChange&#125;&gt;</span><br><span class="line">          &#123;</span><br><span class="line">            contentList &amp;&amp; contentList.map(item =&gt; &#123;</span><br><span class="line">              return &lt;Option value=&#123;item&#125; key=&#123;item&#125;&gt;&#123;item&#125;&lt;/Option&gt;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &lt;/Select&gt;</span><br><span class="line">        &#123;/* 滚动容器的父元素，必须要相对定位 */&#125;</span><br><span class="line">        &lt;div style=&#123;&#123; position: &#x27;relative&#x27; &#125;&#125;&gt;</span><br><span class="line">          &#123;/* 滚动容器：要加id属性，自定义滚动条 */&#125;</span><br><span class="line">          &lt;div style=&#123;&#123; width: 500, height: 200, overflow: &#x27;auto&#x27; &#125;&#125; id=&quot;father&quot;&gt;</span><br><span class="line">            &lt;Collapse</span><br><span class="line">              onChange=&#123;(key) =&gt; &#123;</span><br><span class="line">                this.setState(&#123; activeKey: key &#125;)</span><br><span class="line">              &#125;&#125;</span><br><span class="line">              activeKey=&#123;this.state.activeKey&#125;</span><br><span class="line">              destroyInactivePanel=&#123;true&#125;</span><br><span class="line">            &gt;</span><br><span class="line">              &#123;</span><br><span class="line">                contentList &amp;&amp; contentList.map((item, i) =&gt; (</span><br><span class="line">                  // 定位看到的锚点元素，要加id属性</span><br><span class="line">                  &lt;Panel header=&#123;&quot;This is panel header &quot; + (i + 1)&#125; key=&#123;i&#125; id=&#123;i&#125;&gt;</span><br><span class="line">                    &lt;p&gt;&#123;item&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;/Panel&gt;</span><br><span class="line">                ))</span><br><span class="line">              &#125;</span><br><span class="line">            &lt;/Collapse&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default index;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;自定义的纵向滚动条自动定位&quot;&gt;&lt;a href=&quot;#自定义的纵向滚动条自动定位&quot; class=&quot;headerlink&quot; title=&quot;自定义的纵向滚动条自动定位&quot;&gt;&lt;/a&gt;自定义的纵向滚动条自动定位&lt;/h2&gt;&lt;p&gt;本文的滚动条是自己写的，并非浏览器滚动条&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>React控制Table横向滚动条的位置</title>
    <link href="http://example.com/2021/12/14/react-table-scrollLeft/"/>
    <id>http://example.com/2021/12/14/react-table-scrollLeft/</id>
    <published>2021-12-14T02:19:32.833Z</published>
    <updated>2021-12-14T02:37:18.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Table表格加上ref-和-scroll"><a href="#1-Table表格加上ref-和-scroll" class="headerlink" title="1.Table表格加上ref 和 scroll"></a>1.Table表格加上ref 和 scroll</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Table</span><br><span class="line">   ref=&#123;c =&gt; &#123; this.finishedProductTable = c; &#125;&#125;</span><br><span class="line">   bordered</span><br><span class="line">   dataSource=&#123;[]&#125;</span><br><span class="line">   rowKey=&#123;(record, index) =&gt; index&#125;</span><br><span class="line">   pagination=&#123;false&#125;</span><br><span class="line">   columns=&#123;[]&#125;</span><br><span class="line">   scroll=&#123;&#123; x: true &#125;&#125;</span><br><span class="line"> /&gt;</span><br></pre></td></tr></table></figure><h2 id="2-找到表格的DOM节点，给ant-table-body赋值scrollLeft，offset可以自己计算出宽度，我这里暂时写死了500"><a href="#2-找到表格的DOM节点，给ant-table-body赋值scrollLeft，offset可以自己计算出宽度，我这里暂时写死了500" class="headerlink" title="2. 找到表格的DOM节点，给ant-table-body赋值scrollLeft，offset可以自己计算出宽度，我这里暂时写死了500"></a>2. 找到表格的DOM节点，给ant-table-body赋值scrollLeft，offset可以自己计算出宽度，我这里暂时写死了500</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount() &#123;</span><br><span class="line">  const offsetLeft = 500;</span><br><span class="line">  this.locationTableScrollLeft(offsetLeft);</span><br><span class="line">&#125;</span><br><span class="line">// 定位表格横向滚动条</span><br><span class="line">locationTableScrollLeft(offsetLeft) &#123;</span><br><span class="line">  const table = ReactDOM.findDOMNode(this.finishedProductTable);</span><br><span class="line">  const tableBody = table.querySelector(&#x27;.ant-table-body&#x27;);</span><br><span class="line">  tableBody.scrollLeft = offsetLeft;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Table表格加上ref-和-scroll&quot;&gt;&lt;a href=&quot;#1-Table表格加上ref-和-scroll&quot; class=&quot;headerlink&quot; title=&quot;1.Table表格加上ref 和 scroll&quot;&gt;&lt;/a&gt;1.Table表格加上ref 和 </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vsCode自定义代码块</title>
    <link href="http://example.com/2021/10/21/vscode-code/"/>
    <id>http://example.com/2021/10/21/vscode-code/</id>
    <published>2021-10-21T09:49:21.428Z</published>
    <updated>2021-10-22T02:06:35.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vscode自定义代码块"><a href="#vscode自定义代码块" class="headerlink" title="vscode自定义代码块"></a>vscode自定义代码块</h1><h2 id="1-打开用户代码片段"><a href="#1-打开用户代码片段" class="headerlink" title="1.打开用户代码片段"></a>1.打开用户代码片段</h2><p>文件 -》首选项 -》用户片段   <strong>或者</strong>   左下角齿轮设置 -》 用户代码片段</p><h2 id="2-选择-新建全局代码片段文件"><a href="#2-选择-新建全局代码片段文件" class="headerlink" title="2.选择 新建全局代码片段文件"></a>2.选择 新建全局代码片段文件</h2><p><img src="/.com//../../img/vscode-code-1.png" alt="新建全局代码片段文件"></p><!--  --><h2 id="3-输入代码段文件名，例如：vue-json-点击回车"><a href="#3-输入代码段文件名，例如：vue-json-点击回车" class="headerlink" title="3.输入代码段文件名，例如：vue.json 点击回车"></a>3.输入代码段文件名，例如：vue.json 点击回车</h2><h2 id="4-输入代码片段"><a href="#4-输入代码片段" class="headerlink" title="4.输入代码片段"></a>4.输入代码片段</h2><p>如下：直接全选复制粘贴<br>prefix是指：快捷键提示名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;demo&quot;: &#123;</span><br><span class="line">&quot;prefix&quot;: &quot;vue&quot;,</span><br><span class="line">&quot;body&quot;: [</span><br><span class="line">&quot;&lt;template&gt;&quot;,</span><br><span class="line">&quot; &lt;div class=\&quot;$1\&quot;&gt;&quot;,</span><br><span class="line">&quot; &quot;,</span><br><span class="line">&quot; &lt;/div&gt;&quot;,</span><br><span class="line">&quot;&lt;/template&gt;&quot;,</span><br><span class="line">&quot; &quot;,</span><br><span class="line">&quot;&lt;script&gt;&quot;,</span><br><span class="line">&quot;export default &#123;&quot;,</span><br><span class="line">&quot; data () &#123;&quot;,</span><br><span class="line">&quot; return &#123;&quot;,</span><br><span class="line">&quot; &#125;&quot;,</span><br><span class="line">&quot; &#125;&quot;,</span><br><span class="line">&quot;&#125;&quot;,</span><br><span class="line">&quot;&lt;/script&gt;&quot;,</span><br><span class="line">&quot; &quot;,</span><br><span class="line">&quot;&lt;style scoped lang = \&quot;less\&quot;&gt;&quot;,</span><br><span class="line">&quot; &quot;,</span><br><span class="line">&quot;&lt;/style&gt;&quot;</span><br><span class="line">],</span><br><span class="line">&quot;description&quot;: &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-直接输入vue则出现提示"><a href="#5-直接输入vue则出现提示" class="headerlink" title="5. 直接输入vue则出现提示"></a>5. 直接输入vue则出现提示</h2><p><img src="/.com//../../img/vscode-code-2.png" alt="输入vue"><br><img src="/.com//../../img/vscode-code-3.png" alt="双击展示结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vscode自定义代码块&quot;&gt;&lt;a href=&quot;#vscode自定义代码块&quot; class=&quot;headerlink&quot; title=&quot;vscode自定义代码块&quot;&gt;&lt;/a&gt;vscode自定义代码块&lt;/h1&gt;&lt;h2 id=&quot;1-打开用户代码片段&quot;&gt;&lt;a href=&quot;#1-打</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>blog命令</title>
    <link href="http://example.com/2021/10/15/fanfan/"/>
    <id>http://example.com/2021/10/15/fanfan/</id>
    <published>2021-10-15T07:14:40.934Z</published>
    <updated>2021-12-16T03:15:01.425Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server 或  hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h1 id="发布流程"><a href="#发布流程" class="headerlink" title="发布流程"></a>发布流程</h1><h3 id="1-清除项目缓存"><a href="#1-清除项目缓存" class="headerlink" title="1.清除项目缓存"></a>1.清除项目缓存</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h3 id="2-build项目"><a href="#2-build项目" class="headerlink" title="2.build项目"></a>2.build项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate 或  hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="3-上传代码"><a href="#3-上传代码" class="headerlink" title="3.上传代码"></a>3.上传代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy 或  hexo d(有时不起作用)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="4-访问地址："><a href="#4-访问地址：" class="headerlink" title="4.访问地址："></a>4.访问地址：</h3><p><a href="https://fanchengxia.github.io/">https://fanchengxia.github.io/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vsCode实用插件</title>
    <link href="http://example.com/2021/10/15/hello-world/"/>
    <id>http://example.com/2021/10/15/hello-world/</id>
    <published>2021-10-15T07:10:43.114Z</published>
    <updated>2021-10-21T09:10:00.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vsCode实用插件"><a href="#vsCode实用插件" class="headerlink" title="vsCode实用插件"></a>vsCode实用插件</h2><h3 id="1-wechat-snippet"><a href="#1-wechat-snippet" class="headerlink" title="1.wechat-snippet"></a>1.wechat-snippet</h3><p>微信小程序代码辅助,代码片段自动完成</p><h3 id="2-Vetur"><a href="#2-Vetur" class="headerlink" title="2.Vetur"></a>2.Vetur</h3><p>vue代码高亮，需要在settings.json里配置<br>步骤：ctrl+shift+p   ——》 首选项：打开设置(json)<br>然后在配置里添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;files.associations&quot;: &#123;</span><br><span class="line">        &quot;*.vue&quot;: &quot;html&quot;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;vsCode实用插件&quot;&gt;&lt;a href=&quot;#vsCode实用插件&quot; class=&quot;headerlink&quot; title=&quot;vsCode实用插件&quot;&gt;&lt;/a&gt;vsCode实用插件&lt;/h2&gt;&lt;h3 id=&quot;1-wechat-snippet&quot;&gt;&lt;a href=&quot;#1-wec</summary>
      
    
    
    
    
  </entry>
  
</feed>
